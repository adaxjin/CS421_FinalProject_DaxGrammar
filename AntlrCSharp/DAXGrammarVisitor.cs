//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Users\adajin\Workspace\CS421_Project\DaxGrammar\AntlrCSharp\DAXGrammar.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="DAXGrammarParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IDAXGrammarVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.startRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStartRule([NotNull] DAXGrammarParser.StartRuleContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.functionCategory"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCategory([NotNull] DAXGrammarParser.FunctionCategoryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.aggregationFunctions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAggregationFunctions([NotNull] DAXGrammarParser.AggregationFunctionsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.informationFunctions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInformationFunctions([NotNull] DAXGrammarParser.InformationFunctionsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.approximateDistinctionCountFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitApproximateDistinctionCountFunction([NotNull] DAXGrammarParser.ApproximateDistinctionCountFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.averageFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAverageFunction([NotNull] DAXGrammarParser.AverageFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.averageaFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAverageaFunction([NotNull] DAXGrammarParser.AverageaFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.averagexFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAveragexFunction([NotNull] DAXGrammarParser.AveragexFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.countFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCountFunction([NotNull] DAXGrammarParser.CountFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.countaFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCountaFunction([NotNull] DAXGrammarParser.CountaFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.countaxFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCountaxFunction([NotNull] DAXGrammarParser.CountaxFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.countBlankFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCountBlankFunction([NotNull] DAXGrammarParser.CountBlankFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.countRowsFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCountRowsFunction([NotNull] DAXGrammarParser.CountRowsFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.countxFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCountxFunction([NotNull] DAXGrammarParser.CountxFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.distinctCountFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDistinctCountFunction([NotNull] DAXGrammarParser.DistinctCountFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.distinctCountNoBlankFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDistinctCountNoBlankFunction([NotNull] DAXGrammarParser.DistinctCountNoBlankFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.maxFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMaxFunction([NotNull] DAXGrammarParser.MaxFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.maxaFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMaxaFunction([NotNull] DAXGrammarParser.MaxaFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.maxxFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMaxxFunction([NotNull] DAXGrammarParser.MaxxFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.minFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMinFunction([NotNull] DAXGrammarParser.MinFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.minaFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMinaFunction([NotNull] DAXGrammarParser.MinaFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.minxFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMinxFunction([NotNull] DAXGrammarParser.MinxFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.productFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProductFunction([NotNull] DAXGrammarParser.ProductFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.productxFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProductxFunction([NotNull] DAXGrammarParser.ProductxFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.sumFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSumFunction([NotNull] DAXGrammarParser.SumFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.sumxFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSumxFunction([NotNull] DAXGrammarParser.SumxFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.columnStatisticsFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitColumnStatisticsFunction([NotNull] DAXGrammarParser.ColumnStatisticsFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.containsFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContainsFunction([NotNull] DAXGrammarParser.ContainsFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.containsRowFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContainsRowFunction([NotNull] DAXGrammarParser.ContainsRowFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.containsStringFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContainsStringFunction([NotNull] DAXGrammarParser.ContainsStringFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.containsStringExactFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContainsStringExactFunction([NotNull] DAXGrammarParser.ContainsStringExactFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.customDataFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCustomDataFunction([NotNull] DAXGrammarParser.CustomDataFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.hasOneFilterFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHasOneFilterFunction([NotNull] DAXGrammarParser.HasOneFilterFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.hasOneValueFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHasOneValueFunction([NotNull] DAXGrammarParser.HasOneValueFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.isAfterFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsAfterFunction([NotNull] DAXGrammarParser.IsAfterFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.isBlankFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsBlankFunction([NotNull] DAXGrammarParser.IsBlankFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.isCrossFilteredFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsCrossFilteredFunction([NotNull] DAXGrammarParser.IsCrossFilteredFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.isEmptyFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsEmptyFunction([NotNull] DAXGrammarParser.IsEmptyFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.isErrorFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsErrorFunction([NotNull] DAXGrammarParser.IsErrorFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.isEvenFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsEvenFunction([NotNull] DAXGrammarParser.IsEvenFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.isFilteredFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsFilteredFunction([NotNull] DAXGrammarParser.IsFilteredFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.isInScopeFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsInScopeFunction([NotNull] DAXGrammarParser.IsInScopeFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.isLogicalFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsLogicalFunction([NotNull] DAXGrammarParser.IsLogicalFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.isNonTextFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsNonTextFunction([NotNull] DAXGrammarParser.IsNonTextFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.isNumberFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsNumberFunction([NotNull] DAXGrammarParser.IsNumberFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.isOddFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsOddFunction([NotNull] DAXGrammarParser.IsOddFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.isOnOrAfterFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsOnOrAfterFunction([NotNull] DAXGrammarParser.IsOnOrAfterFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.isSelectedMeasureFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsSelectedMeasureFunction([NotNull] DAXGrammarParser.IsSelectedMeasureFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.isSubtotalFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsSubtotalFunction([NotNull] DAXGrammarParser.IsSubtotalFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.isTextFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsTextFunction([NotNull] DAXGrammarParser.IsTextFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.nonVisualFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNonVisualFunction([NotNull] DAXGrammarParser.NonVisualFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.selectedMeasureFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelectedMeasureFunction([NotNull] DAXGrammarParser.SelectedMeasureFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.selectedMeasureFormatStringFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelectedMeasureFormatStringFunction([NotNull] DAXGrammarParser.SelectedMeasureFormatStringFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.selectedMeasureNameFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelectedMeasureNameFunction([NotNull] DAXGrammarParser.SelectedMeasureNameFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.userCultureFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUserCultureFunction([NotNull] DAXGrammarParser.UserCultureFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.userNameFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUserNameFunction([NotNull] DAXGrammarParser.UserNameFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.userObjectIDFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUserObjectIDFunction([NotNull] DAXGrammarParser.UserObjectIDFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.userPrincipalNameFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUserPrincipalNameFunction([NotNull] DAXGrammarParser.UserPrincipalNameFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.anyColRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnyColRef([NotNull] DAXGrammarParser.AnyColRefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.simpleColRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleColRef([NotNull] DAXGrammarParser.SimpleColRefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.qualifiedColRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifiedColRef([NotNull] DAXGrammarParser.QualifiedColRefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.tableRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTableRef([NotNull] DAXGrammarParser.TableRefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.tableExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTableExpr([NotNull] DAXGrammarParser.TableExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.exprOverTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprOverTable([NotNull] DAXGrammarParser.ExprOverTableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.measureRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMeasureRef([NotNull] DAXGrammarParser.MeasureRefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.variant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariant([NotNull] DAXGrammarParser.VariantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.sortOrder"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSortOrder([NotNull] DAXGrammarParser.SortOrderContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.scalarValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitScalarValue([NotNull] DAXGrammarParser.ScalarValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValue([NotNull] DAXGrammarParser.ValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.typeScalar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeScalar([NotNull] DAXGrammarParser.TypeScalarContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.withinText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWithinText([NotNull] DAXGrammarParser.WithinTextContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DAXGrammarParser.findText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFindText([NotNull] DAXGrammarParser.FindTextContext context);
}
